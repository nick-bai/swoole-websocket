<?php

// autoload_static.php @generated by Composer

namespace Composer\Autoload;

class ComposerStaticInit706de157fddc5c0c6c92a0c791f7f4e1
{
    public static $files = array (
        '33197a0023ced5fbf8f861d1c4ca048d' => __DIR__ . '/..' . '/topthink/think-orm/src/config.php',
    );

    public static $prefixLengthsPsr4 = array (
        'w' => 
        array (
            'whisper\\' => 8,
        ),
        't' => 
        array (
            'think\\' => 6,
        ),
        'T' => 
        array (
            'Toolkit\\Sys\\' => 12,
            'Toolkit\\Cli\\' => 12,
        ),
        'P' => 
        array (
            'Psr\\Log\\' => 8,
        ),
        'M' => 
        array (
            'Monolog\\' => 8,
        ),
        'I' => 
        array (
            'Inhere\\Console\\' => 15,
        ),
    );

    public static $prefixDirsPsr4 = array (
        'whisper\\' => 
        array (
            0 => __DIR__ . '/../..' . '/src',
        ),
        'think\\' => 
        array (
            0 => __DIR__ . '/..' . '/topthink/think-orm/src',
        ),
        'Toolkit\\Sys\\' => 
        array (
            0 => __DIR__ . '/..' . '/toolkit/sys-utils/src',
        ),
        'Toolkit\\Cli\\' => 
        array (
            0 => __DIR__ . '/..' . '/toolkit/cli-utils/src',
        ),
        'Psr\\Log\\' => 
        array (
            0 => __DIR__ . '/..' . '/psr/log/Psr/Log',
        ),
        'Monolog\\' => 
        array (
            0 => __DIR__ . '/..' . '/monolog/monolog/src/Monolog',
        ),
        'Inhere\\Console\\' => 
        array (
            0 => __DIR__ . '/..' . '/inhere/console/src',
        ),
    );

    public static function getInitializer(ClassLoader $loader)
    {
        return \Closure::bind(function () use ($loader) {
            $loader->prefixLengthsPsr4 = ComposerStaticInit706de157fddc5c0c6c92a0c791f7f4e1::$prefixLengthsPsr4;
            $loader->prefixDirsPsr4 = ComposerStaticInit706de157fddc5c0c6c92a0c791f7f4e1::$prefixDirsPsr4;

        }, null, ClassLoader::class);
    }
}
